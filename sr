#!/usr/bin/env bash

unset -v CDPATH

SCRIPT_PATH=$(cd ${0%/*} && echo $PWD/${0##*/})
TOOLCHAIN_PATH=`dirname "$SCRIPT_PATH"`
SCRIPT_NAME=$(basename $SCRIPT_PATH)

TARGET="armv7-none-linux-androideabi"

pushd "$TOOLCHAIN_PATH" > /dev/null
./setup.sh
popd > /dev/null

readonly NDK="/Users/geordiejay/Downloads/android-ndk-r16b"
readonly SDK="${TOOLCHAIN_PATH}/Android.sdk"

# Sets the PATH for the swift / swiftc commands below!
# This in itself performs most of this script's magic..
export PATH="${SDK}/usr/bin:$PATH"


COMMAND="$1"; shift;
case "$COMMAND" in
    "swift")
        swift $@
    ;;
    "swiftc")
        swiftc \
            -target "${TARGET}" \
            -sdk "${SDK}" \
            -tools-directory "${SDK}/usr/bin" \
            -Xcc --sysroot="${NDK}/sysroot" \
            -Xlinker -L"${NDK}/platforms/android-21/arch-arm/usr/lib" \
            -Xlinker -L"${NDK}/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/lib/gcc/arm-linux-androideabi/4.9.x/armv7-a/thumb/" \
            -Xlinker -L"${NDK}/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/arm-linux-androideabi/lib/armv7-a/thumb/" \
            -Xclang-linker --sysroot="${NDK}/platforms/android-21/arch-arm" \
            -Xlinker -rpath -Xlinker '$ORIGIN' \
            -Xclang-linker "-nostdlib++" \
            $@
    ;;
    "build")
        swift build --destination $TOOLCHAIN_PATH/$TARGET.json $@
    ;;
    "copylibs")
        DESTINATION=${1:-"."}
        echo "Copying Swift libs into $DESTINATION"
        cp $TOOLCHAIN_PATH/usr/lib/swift/android/lib{c++_shared,curl,dispatch,Foundation,scu*,swiftCore,swiftGlibc,swiftRemoteMirror,swiftSwiftOnoneSupport,xml2}.so $DESTINATION
    ;;
    *)
        echo "----------------------------"
        echo "Usage: $SCRIPT_NAME COMMAND"
        echo "Valid commands are: \`swift\` \`swiftc\` \`build\` \`copylibs\`"
        echo "----------------------------"
        echo ""
    ;;
esac
